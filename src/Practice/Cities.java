package Practice;

import java.util.Map.*;
import java.util.*;
/*
Create a Map from array of cities that will sort keys in alphabetical order. 
As a key store the name of the city and as a value store the length of the city 
(Example: Paris=5, Moscow =6, Washington DC=13 etc..). 
If any city name is more than 7 characters remove that city . 
*/
public class Cities {
	public static void main(String[] args) {
		String[] virginia = { "ABINGDON", "ACCOMAC", "ADWOLF", "ALBERTA", "ALEXANDRIA", "ALTAVISTA", "AMHERST",
				"ANNANDALE", "APPALACHIA", "APPOMATTOX", "AQUIA HARBOUR", "ARLINGTON", "ASHLAND", "ATKINS",
				"BAILEY'S CROSSROADS", "BASSETT", "BASYE-BRYCE MOUNTAIN", "BEDFORD", "BELLE HAVEN", "BELLE HAVEN",
				"BELLWOOD", "BENSLEY", "BERRYVILLE", "BIG STONE GAP", "BLACKSBURG", "BLACKSTONE", "BLOXOM", "BLUEFIELD",
				"BLUE RIDGE", "BON AIR", "BOONES MILL", "BOWLING GREEN", "BOYCE", "BOYDTON", "BOYKINS", "BRANCHVILLE",
				"BRIDGEWATER", "BRISTOL", "BROADWAY", "BRODNAX", "BROOKNEAL", "BUCHANAN", "BUENA VISTA", "BULL RUN",
				"BURKE", "BURKEVILLE", "CANA", "CAPE CHARLES", "CAPRON", "CASTLEWOOD", "CAVE SPRING", "CEDAR BLUFF",
				"CENTREVILLE", "CHAMBERLAYNE", "CHANTILLY", "CHARLOTTE COURT HOUSE", "CHARLOTTESVILLE", "CHASE CITY",
				"CHATHAM", "CHATMOSS", "CHERITON", "CHESAPEAKE", "CHESTER", "CHESTERFIELD COURT HOUSE", "CHILHOWIE",
				"CHINCOTEAGUE", "CHRISTIANSBURG", "CLAREMONT", "CLARKSVILLE", "CLAYPOOL HILL", "CLEVELAND", "CLIFTON",
				"CLIFTON FORGE", "CLINCHCO", "CLINCHPORT", "CLINTWOOD", "CLOVERDALE", "COEBURN", "COLLINSVILLE",
				"COLONIAL BEACH", "COLONIAL HEIGHTS", "COLUMBIA", "COURTLAND", "COVINGTON", "CRAIGSVILLE", "CREWE",
				"CRIMORA", "CROZET", "CULPEPER", "DAHLGREN", "DALE CITY", "DALEVILLE", "DAMASCUS", "DANVILLE", "DAYTON",
				"DENDRON", "DILLWYN", "DOOMS", "DRAKES BRANCH", "DRYDEN", "DUBLIN", "DUFFIELD", "DUMBARTON", "DUMFRIES",
				"DUNGANNON", "DUNN LORING", "EAST HIGHLAND PARK", "EASTVILLE", "EDINBURG", "ELKTON",
				"ELLISTON-LAFAYETTE", "EMORY-MEADOW VIEW", "EMPORIA", "ETTRICK", "EWING", "EXMORE", "FAIRFAX",
				"FAIRLAWN", "FAIRVIEW BEACH", "FALLS CHURCH", "FALMOUTH", "FANCY GAP", "FARMVILLE", "FERRUM",
				"FIELDALE", "FINCASTLE", "FISHERSVILLE", "FLOYD", "FOREST", "FORT BELVOIR", "FORT CHISWELL",
				"FORT HUNT", "FORT LEE", "FRANCONIA", "FRANKLIN", "FREDERICKSBURG", "FRIES", "FRONT ROYAL",
				"GAINESVILLE", "GALAX", "GATE CITY", "GLADE SPRING", "GLASGOW", "GLEN ALLEN", "GLEN LYN",
				"GLOUCESTER COURTHOUSE", "GLOUCESTER POINT", "GORDONSVILLE", "GOSHEN", "GREAT FALLS", "GREENVILLE",
				"GRETNA", "GROTTOES", "GROVETON", "GRUNDY", "HALIFAX", "HALLWOOD", "HAMILTON", "HAMPDEN SYDNEY",
				"HAMPTON", "HARRISONBURG", "HAYMARKET", "HAYSI", "HERNDON", "HIGHLAND SPRINGS", "HILLSBORO",
				"HILLSVILLE", "HOLLINS", "HONAKER", "HOPEWELL", "HORSE PASTURE", "HUNTINGTON", "HURT", "HYBLA VALLEY",
				"IDYLWOOD", "INDEPENDENCE", "IRON GATE", "IRVINGTON", "IVOR", "JARRATT", "JEFFERSON", "JOLIVUE",
				"JONESVILLE", "KELLER", "KENBRIDGE", "KEOKEE", "KEYSVILLE", "KILMARNOCK", "LA CROSSE", "LAKE BARCROFT",
				"LAKE MONTICELLO", "LAKE RIDGE", "LAKESIDE", "LAUREL", "LAUREL PARK", "LAWRENCEVILLE", "LAYMANTOWN",
				"LEBANON", "LEESBURG", "LEXINGTON", "LINCOLNIA", "LINTON HALL", "LOCH LOMOND", "LORTON", "LOUISA",
				"LOVETTSVILLE", "LOW MOOR", "LURAY", "LYNCHBURG", "LYNDHURST", "MCKENNEY", "MCLEAN", "MADISON",
				"MADISON HEIGHTS", "MANASSAS", "MANASSAS PARK", "MANTUA", "MARION", "MARTINSVILLE", "MASSANUTTEN",
				"MATOACA", "MAX MEADOWS", "MECHANICSVILLE", "MELFA", "MERRIFIELD", "MERRIMAC", "MIDDLEBURG",
				"MIDDLETOWN", "MINERAL", "MONTCLAIR", "MONTEREY", "MONTROSE", "MONTROSS", "MOUNT CRAWFORD",
				"MOUNT JACKSON", "MOUNT VERNON", "NARROWS", "NASSAWADOX", "NEW CASTLE", "NEWINGTON", "NEW MARKET",
				"NEWPORT NEWS", "NEWSOMS", "NICKELSVILLE", "NOKESVILLE", "NORFOLK", "NORTH SHORE", "NORTH SPRINGFIELD",
				"NORTON", "OAK LEVEL", "OAKTON", "OCCOQUAN", "ONANCOCK", "ONLEY", "ORANGE", "PAINTER", "PAMPLIN CITY",
				"PARKSLEY", "PATRICK SPRINGS", "PEARISBURG", "PEMBROKE", "PENHOOK", "PENNINGTON GAP", "PETERSBURG",
				"PHENIX", "PIMMIT HILLS", "POCAHONTAS", "POQUOSON", "PORT ROYAL", "PORTSMOUTH", "POUND", "PULASKI",
				"PURCELLVILLE", "QUANTICO", "QUANTICO STATION", "RADFORD", "RAVEN", "REMINGTON", "RESTON", "RICH CREEK",
				"RICHLANDS", "RICHMOND", "RIDGEWAY", "ROANOKE", "ROCKY MOUNT", "ROSE HILL", "ROSE HILL", "ROUND HILL",
				"RURAL RETREAT", "RUSHMERE", "RUSTBURG", "ST. CHARLES", "ST. PAUL", "SALEM", "SALTVILLE", "SANDY LEVEL",
				"SAXIS", "SCOTTSBURG", "SCOTTSVILLE", "SELMA", "SEVEN CORNERS", "SHAWSVILLE", "SHENANDOAH", "SHERANDO",
				"SHORT PUMP", "SMITHFIELD", "SOUTH BOSTON", "SOUTH HILL", "SPOTSYLVANIA COURTHOUSE", "SPRINGFIELD",
				"STANARDSVILLE", "STANLEY", "STANLEYTOWN", "STAUNTON", "STEPHENS CITY", "STONY CREEK", "STRASBURG",
				"STUART", "STUARTS DRAFT", "SUDLEY", "SUFFOLK", "SUGAR GROVE", "SURRY", "TANGIER", "TAPPAHANNOCK",
				"TAZEWELL", "THE PLAINS", "TIMBERLAKE", "TIMBERVILLE", "TOMS BROOK", "TRIANGLE", "TROUTDALE",
				"TROUTVILLE", "TUCKAHOE", "TYSONS CORNER", "UNION HALL", "URBANNA", "VANSANT", "VERONA", "VICTORIA",
				"VIENNA", "VILLA HEIGHTS", "VINTON", "VIRGILINA", "VIRGINIA BEACH", "WACHAPREAGUE", "WAKEFIELD",
				"WARRENTON", "WARSAW", "WASHINGTON", "WAVERLY", "WAYNESBORO", "WEBER CITY", "WEST GATE",
				"WESTLAKE CORNER", "WEST POINT", "WEST SPRINGFIELD", "WEYERS CAVE", "WHITE STONE", "WILLIAMSBURG",
				"WINCHESTER", "WINDSOR", "WISE", "WOLF TRAP", "WOODBRIDGE", "WOODLAWN", "WOODSTOCK", "WYNDHAM",
				"WYTHEVILLE", "YORKSHIRE", "YORKTOWN" };
		Map<String, Integer> vCity = new TreeMap<>();
		for (String s : virginia) {
			if (s.startsWith("D")) {
				vCity.put(s, (s.replaceAll("[^A-Za-z]", "").length()));
			} else if (s.startsWith("Y")) {
				vCity.put(s, (s.replaceAll("[^A-Za-z]", "").length()));
			} else if (s.startsWith("M")) {
				vCity.put(s, (s.replaceAll("[^A-Za-z]", "").length()));
			}
		}
		System.out.println("LinkedHashMap of Cities :");
		System.out.println(vCity);
		System.out.println();
		System.out.println("==After removing City name with '>7' character=====");
		Set<Entry<String, Integer>> cities = vCity.entrySet();
		Iterator<Entry<String, Integer>> it = cities.iterator();
		while (it.hasNext()) {
			Entry<String, Integer> e = it.next();
			int i=e.getValue();
			if ( i> 7) {
				it.remove();
			}
		}
		System.out.println("After removing: " + cities);
	}
}